//google auth not server side with redux and react-redux
import React from 'react';
import { connect } from 'react-redux';
import { signIn, signOut } from '../actions';


class GoogleAuth extends React.Component {

  componentDidMount() {
    window.gapi.load('client:auth2', () => {
      window.gapi.client.init({
        clientId: 
          '702357963642-3vhhi9u8sv67vpfi79c4nrsjd0fvse51.apps.googleusercontent.com',
        scope: 'email'
      })
      .then(() => {
        this.auth = window.gapi.auth2.getAuthInstance();

        this.onAuthChange(this.auth.isSignedIn.get());
        this.auth.isSignedIn.listen(this.onAuthChange);
      });
    });
  }
  
 //gets token generated by google when signed in
  onAuthChange = isSignedIn => {
    if (isSignedIn) {
      this.props.signIn(this.auth.currentUser.get().getId());
    }
    else {
      this.props.signOut();
    }
  };
    //click functions
  onSignInClick = () => {
    this.auth.signIn();
  } 

  onSignOutClick = () => {
    this.auth.signOut();
  }

   //determines the state of the user logged in or not
   //and what what text to display on button
  renderAuthButton() {
    if (this.props.isSignedIn === null) {
      return null;
    } 
    else if (this.props.isSignedIn) {
      return (
        <button onClick={this.onSignOutClick} className="ui red google button">
          <i className="google icon" />
          Sign out
        </button>
      )
    } 
    else {
      return (
        <button onClick={this.onSignInClick} className="ui red google button">
          <i className="google icon" />
          Sign In with Google
        </button>
      );
    }
  }

  render() {
    return (
      <div>{this.renderAuthButton()}</div>
    )
  }
}

//mapState is used for selecting the part of data from the store
//that it is connected to the component
//in this case it is determing if use is signed in or not
const mapStateToProps = (state) => {
  return { isSignedIn: state.auth.isSignedIn };
}

export default connect(
  mapStateToProps,
  { signIn, signOut })
  (GoogleAuth);
  
  
